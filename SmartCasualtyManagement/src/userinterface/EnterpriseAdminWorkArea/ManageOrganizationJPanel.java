/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnterpriseAdminWorkArea;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.PatternMatcher;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SONY
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount ua;
    private PatternMatcher pm;

    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount ua) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ua = ua;
        pm = new PatternMatcher();

        Enterprise.EnterpriseType type = enterprise.getEnterpriseType();

        if (type.equals(Enterprise.EnterpriseType.Ambulance)) {
            populateAmbulanceOrg();
        } else if (type.equals(Enterprise.EnterpriseType.Police)) {
            populatePoliceOrgCombo();
        } else if (type.equals(Enterprise.EnterpriseType.Government)) {
            populateVehicleOrgCombo();
        } else {
            populateHospCombo();
        }
        populateOrganizationTable();

    }

    private void populateOrganizationTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = organization.getName();
            row[1] = organization.getZipCode();
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Zip Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Type");

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel3.setText("Add Organization");

        jLabel1.setText("Zip Code");

        txtZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addGap(60, 60, 60)
                                .addComponent(submitJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(36, 36, 36)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(organizationJComboBox, 0, 96, Short.MAX_VALUE)
                            .addComponent(txtZip))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitJButton)
                    .addComponent(backJButton))
                .addContainerGap(89, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populatePoliceOrgCombo() {
        organizationJComboBox.removeAllItems();

        for (Organization.Type type : Organization.Type.values()) {

            if (!type.getValue().equals(Organization.Type.Admin.getValue()) && !type.getValue().equals(Organization.Type.StateAdmin.getValue())
                    && !type.getValue().equals(Organization.Type.Ambulance.getValue()) && !type.getValue().equals(Organization.Type.Receptionist.getValue())
                    && !type.getValue().equals(Organization.Type.Person.getValue()) && !type.getValue().equals(Organization.Type.Vehicle.getValue())) {
                organizationJComboBox.addItem(type);
            }
        }
    }

    private void populateAmbulanceOrg() {
        organizationJComboBox.removeAllItems();

        for (Organization.Type type : Organization.Type.values()) {

            if (!type.getValue().equals(Organization.Type.Admin.getValue()) && !type.getValue().equals(Organization.Type.StateAdmin.getValue())
                    && !type.getValue().equals(Organization.Type.Receptionist.getValue()) && !type.getValue().equals(Organization.Type.Police.getValue())
                    && !type.getValue().equals(Organization.Type.Person.getValue()) && !type.getValue().equals(Organization.Type.Vehicle.getValue())) {
                organizationJComboBox.addItem(type);
            }
        }
    }

    private void populateHospCombo() {
        organizationJComboBox.removeAllItems();

        for (Organization.Type type : Organization.Type.values()) {

            if (!type.getValue().equals(Organization.Type.Admin.getValue()) && !type.getValue().equals(Organization.Type.StateAdmin.getValue())
                    && !type.getValue().equals(Organization.Type.Ambulance.getValue()) && !type.getValue().equals(Organization.Type.Police.getValue())
                    && !type.getValue().equals(Organization.Type.Person.getValue()) && !type.getValue().equals(Organization.Type.Vehicle.getValue())) {
                organizationJComboBox.addItem(type);
            }
        }
    }

    private void populateVehicleOrgCombo() {
        organizationJComboBox.removeAllItems();

        for (Organization.Type type : Organization.Type.values()) {

            if (!type.getValue().equals(Organization.Type.Admin.getValue()) && !type.getValue().equals(Organization.Type.StateAdmin.getValue())
                    && !type.getValue().equals(Organization.Type.Ambulance.getValue()) && !type.getValue().equals(Organization.Type.Police.getValue())
                    && !type.getValue().equals(Organization.Type.Receptionist.getValue())) {
                organizationJComboBox.addItem(type);
            }
        }
    }


    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        if (!pm.getZipCodes().matcher(txtZip.getText()).matches()) {
            JOptionPane.showMessageDialog(this, "Enter valid Zip code");
        } else {

            Organization.Type type = (Organization.Type) organizationJComboBox.getSelectedItem();
            String zip = txtZip.getText();

            Boolean isUnique = enterprise.getOrganizationDirectory().isOrgZipCodeUnique(type, zip);

            if (isUnique == false) {
                    JOptionPane.showMessageDialog(this, "One zip can have only one organization");

            } else {
                Organization org1 = enterprise.getOrganizationDirectory().createOrganization(type);
                org1.setZipCode(txtZip.getText());
                JOptionPane.showMessageDialog(this, "Organization added");
                populateOrganizationTable();
                txtZip.setText("");
                 
            }

        }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void txtZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables
}
