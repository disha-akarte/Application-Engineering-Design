/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AmbulanceRole;

import Business.City.City;
import Business.Country.Country;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.ReceptionistOrganization;
import Business.Organization.Organization;
import Business.SMS.SMS;
import Business.UserAccount.UserAccount;
import Business.VitalSign.VitalSign;
import Business.VitalSign.VitalSignHistory;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import com.twilio.sdk.TwilioRestException;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author SONY
 */
public class RequestHospitalJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Employee person;
    private City city;
    private Country country;
    private WorkRequest request;

    /**
     * Creates new form RequestLabTestJPanel
     */
    public RequestHospitalJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, WorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.request = request;
        city = enterprise.getCity();
        country = city.getState().getCountry();
        valueLabel.setText(enterprise.getName());
        person = null;
        txtZip.setText(request.getMessage());
        txtZip.setEditable(false);
    }

    public static int getRandomNumberFrom(int min, int max) {
        Random num = new Random();
        int randomNumber = num.nextInt((max + 1) - min) + min;
        return randomNumber;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPatID = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        btnCreateVS = new javax.swing.JButton();
        lblrespRate = new javax.swing.JLabel();
        lblheartRate = new javax.swing.JLabel();
        lblsysBP = new javax.swing.JLabel();
        lblwt = new javax.swing.JLabel();
        txtrespRate = new javax.swing.JTextField();
        txtsysBP = new javax.swing.JTextField();
        txtheartRate = new javax.swing.JTextField();
        txtwt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setText("Request Test");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, -1, -1));

        jLabel1.setText("Patient ID");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));
        add(txtPatID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 89, 20));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        valueLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 120, 30));

        enterpriseLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 90, 30));

        btnCreateVS.setText("CAPTURE VS");
        btnCreateVS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateVSActionPerformed(evt);
            }
        });
        add(btnCreateVS, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, -1));

        lblrespRate.setText("Respiratory Rate");
        add(lblrespRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, 20));

        lblheartRate.setText("Heart Rate");
        add(lblheartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, 20));

        lblsysBP.setText("Systolic Blood Pressure");
        add(lblsysBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, 20));

        lblwt.setText("Weight in pounds");
        add(lblwt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, 20));

        txtrespRate.setEditable(false);
        txtrespRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrespRateActionPerformed(evt);
            }
        });
        add(txtrespRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 90, 20));

        txtsysBP.setEditable(false);
        txtsysBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsysBPActionPerformed(evt);
            }
        });
        add(txtsysBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 90, -1));

        txtheartRate.setEditable(false);
        txtheartRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtheartRateActionPerformed(evt);
            }
        });
        add(txtheartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 90, 20));

        txtwt.setEditable(false);
        txtwt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtwtActionPerformed(evt);
            }
        });
        add(txtwt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 90, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("Send Patient Details to Hospital");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel3.setText("Zip Code");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        txtZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipActionPerformed(evt);
            }
        });
        add(txtZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 90, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        VitalSignHistory vsh = person.getVsh();

        VitalSign vs = vsh.addVitalSign();
        vs.setBloodPressure(Integer.parseInt(txtsysBP.getText()));
        vs.setHeartRate(Integer.parseInt(txtheartRate.getText()));
        vs.setRespRate(Integer.parseInt(txtrespRate.getText()));
        vs.setWeight(Integer.parseInt(txtwt.getText()));
        vs.getTimestamp();

        String message = txtZip.getText();

        LabTestWorkRequest req = new LabTestWorkRequest();
        req.setPerson(person);
        req.setMessage(message);
        req.setSender(userAccount);
        req.setStatus("Sent");

        Organization org = null;

        for (Enterprise e : city.getEnterpriseDirectory().getEnterpriseList()) {
            for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof ReceptionistOrganization && (organization.getZipCode().equals(txtZip.getText()))) {

                    org = organization;
                    System.out.println(org.getName());

                    break;
                }
            }
            if (org != null) {
                org.getWorkQueue().getWorkRequestList().add(req);
                userAccount.getWorkQueue().getWorkRequestList().add(req);
                request.setStatus("Sent to Hospital");
                JOptionPane.showMessageDialog(this, "Work request created");

                txtPatID.setText("");
                txtZip.setText("");
                txtheartRate.setText("");
                txtrespRate.setText("");
                txtsysBP.setText("");
                txtwt.setText("");

                break;

            }
            
            SMS sms = new SMS();
                try {
                    if(person.getEmergencyContactPhone()!=null){
                    sms.sendSms();
                    }
                } catch (TwilioRestException ex) {
                    Logger.getLogger(RequestHospitalJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }

        }


    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AmbulanceWorkAreaJPanel dwjp = (AmbulanceWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnCreateVSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateVSActionPerformed
        // TODO add your handling code here:
        try {
            String id = txtPatID.getText();
            for (Employee e : country.getEmpList()) {

                if (e.getId().equals(id)) {

                    person = e;
                    System.out.println("Person name" + person.getName());
                    txtheartRate.setText(String.valueOf(getRandomNumberFrom(20, 110)));
                    txtrespRate.setText(String.valueOf(getRandomNumberFrom(20, 110)));
                    txtsysBP.setText(String.valueOf(getRandomNumberFrom(20, 110)));
                    txtwt.setText(String.valueOf(getRandomNumberFrom(20, 110)));
                    break;

                }
            }

            if (person == null) {
                JOptionPane.showMessageDialog(this, "Enter valid person ID");

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Enter value for person ID");
        }


    }//GEN-LAST:event_btnCreateVSActionPerformed

    private void txtrespRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrespRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrespRateActionPerformed

    private void txtsysBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsysBPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsysBPActionPerformed

    private void txtheartRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtheartRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtheartRateActionPerformed

    private void txtwtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtwtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtwtActionPerformed

    private void txtZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnCreateVS;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblheartRate;
    private javax.swing.JLabel lblrespRate;
    private javax.swing.JLabel lblsysBP;
    private javax.swing.JLabel lblwt;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTextField txtPatID;
    private javax.swing.JTextField txtZip;
    private javax.swing.JTextField txtheartRate;
    private javax.swing.JTextField txtrespRate;
    private javax.swing.JTextField txtsysBP;
    private javax.swing.JTextField txtwt;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
