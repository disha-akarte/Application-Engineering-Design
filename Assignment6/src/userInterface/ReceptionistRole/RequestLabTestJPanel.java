/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ReceptionistRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.NurseOrganization;
import Business.Organization.Organization;
import Business.Organization.DonorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.extra.Donor;
import Business.extra.PatternMatcher;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author SONY
 */
public class RequestLabTestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Donor demoDonor;
    private Calendar cal = Calendar.getInstance();
    private Date d = cal.getTime();
    private PatternMatcher pm;

    /**
     * Creates new form RequestLabTestJPanel
     */
    public RequestLabTestJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        valueLabel.setText(enterprise.getName());

        requestJButton.setEnabled(false);

        donorNameJText.setEditable(false);
        refreshCombo();
        pm = new PatternMatcher();
    }

    public void refreshCombo() {
        DonorCombo.removeAll();
        for (Employee e : enterprise.getEmployeeDirectory().getEmployeeList()) {
            if (e instanceof Donor) {

                DonorCombo.addItem(e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        donorNameJText = new javax.swing.JTextField();
        lblsearch = new javax.swing.JLabel();
        DonorCombo = new javax.swing.JComboBox();
        CreateDonorjButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestJButton.setText("Create Request");
        requestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestJButtonActionPerformed(evt);
            }
        });
        add(requestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, -1, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 130, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 120, 30));

        jLabel2.setText("Donor Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));
        add(donorNameJText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 90, -1));

        lblsearch.setText("Select Donor");
        add(lblsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        DonorCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Donor" }));
        DonorCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DonorComboActionPerformed(evt);
            }
        });
        add(DonorCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 90, -1));

        CreateDonorjButton.setText("Create Donor");
        CreateDonorjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDonorjButtonActionPerformed(evt);
            }
        });
        add(CreateDonorjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ReceptionistWorkAreaJPanel dwjp = (ReceptionistWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void requestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestJButtonActionPerformed
        
         DonorCombo.setEnabled(true);
        String name = donorNameJText.getText();
        if (!name.equals("")) {
            if (!pm.getPattern().matcher(name).matches()) {
                JOptionPane.showMessageDialog(null, "Cannot add invalid values. Please input only alphabets", "Caution", JOptionPane.ERROR_MESSAGE);
                return;

            }
        }
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof DonorOrganization) {
                org = organization;
            }
        }

        if (org == null) {

            org = new DonorOrganization();
            enterprise.getOrganizationDirectory().getOrganizationList().add(org);
        }

        if (org != null) {
            if (name.equals("")) {

                if (DonorCombo.getSelectedIndex() == 0) {

                    JOptionPane.showMessageDialog(this, "Select a value!");
                    return;
                } else {
                    Donor d = (Donor) DonorCombo.getSelectedItem();
                    name = d.getName();
                    demoDonor = d;
                  
                }

            } else {
                Donor donor = new Donor();
                donor.setName(name);
                org.getEmployeeDirectory().createEmployee(name);
                enterprise.getEmployeeDirectory().getEmployeeList().add(donor);
                demoDonor = donor;
            }
        }

        LabTestWorkRequest request = new LabTestWorkRequest();
        request.setMessage(name);
        request.setSender(userAccount);
        request.setStatus("Sent");
        request.setDonor(demoDonor);
        request.setRequestDate(d);

        Organization org1 = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof NurseOrganization) {
                org1 = organization;
                break;
            }
        }
        if (org1 != null) {
            org1.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(this, "Request successfully Created!");
            // refreshCombo();
            
            donorNameJText.setText("");
            donorNameJText.setEnabled(false);
            demoDonor = null;

            userProcessContainer.remove(this);
            Component[] componentArray = userProcessContainer.getComponents();
            Component component = componentArray[componentArray.length - 1];
            ReceptionistWorkAreaJPanel dwjp = (ReceptionistWorkAreaJPanel) component;
            dwjp.populateRequestTable();
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);

        }
       


    }//GEN-LAST:event_requestJButtonActionPerformed

    private void DonorComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DonorComboActionPerformed
        // TODO add your handling code here:

        requestJButton.setEnabled(true);

    }//GEN-LAST:event_DonorComboActionPerformed

    private void CreateDonorjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDonorjButtonActionPerformed
        // TODO add your handling code here:
        requestJButton.setEnabled(true);
        DonorCombo.setEnabled(false);
        donorNameJText.setEditable(true);

    }//GEN-LAST:event_CreateDonorjButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateDonorjButton;
    private javax.swing.JComboBox DonorCombo;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField donorNameJText;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblsearch;
    private javax.swing.JButton requestJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
